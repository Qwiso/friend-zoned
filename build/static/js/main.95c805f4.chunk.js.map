{"version":3,"sources":["components/map/MarkerIcons.jsx","MapStyles.js","components/map/MarkerEditor.jsx","components/ui/HelpWindow.jsx","components/map/MapToolbar.jsx","components/ui/Sidebar.jsx","components/map/MapView.jsx","App.js","serviceWorker.js","index.js"],"names":["getMarkerSVGByName","iconName","icon","findIconDefinition","prefix","anchor","x","y","path","scale","strokeColor","strokeWeight","fillColor","fillOpacity","library","add","fas","testing","elementType","stylers","color","visibility","featureType","MarkerEditor","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onNameChange","props","onDescriptionChange","onFillColorChange","onFillOpacityChange","onStrokeColorChange","onStrokeWeightChange","inherits","createClass","key","value","_this2","activeMarker","react_default","a","createElement","marker","className","type","name","onChange","e","description","iconSVG","min","max","step","Component","HelpWindow","state","visible","style","backgroundColor","children","MapToolbar","selectedIcon","markerIconClicked","setState","currentTarget","onIconClick","oldIcon","window","document","querySelector","classList","remove","placeMarker","availableIcons","makeIcons","iconNames","stack","forEach","push","onClick","data-icon-name","id","onMapSave","Sidebar","size","side","width","maxWidth","left","right","MapView","mapStyle","leftSidebarVisible","markerEditorVisible","mapToolbarVisible","currentMarkerIconName","currentMarkerSVG","userMarkers","otherMarkers","toggleLeftSidebar","toggleMapToolbar","toggleHelpWindow","helpWindowVisible","actionButtonMouseEnter","actionButtonMouseLeave","onMarkerClick","b","index","onOtherMarkerClick","globalMarkerClicked","panToPos","dataset","position","globalOtherMarkerClicked","toolbarIconClicked","onMapClicked","newMarker","lat","latLng","lng","toConsumableArray","saveMap","onMarkerNameChange","onMarkerDescriptionChange","onMarkerFillColorChange","shouldRender","onMarkerFillOpacityChange","parseFloat","newUserMarkers","onMarkerStrokeColorChange","onMarkerStrokeWeightChange","parseInt","map","thing","dist","animation","google","maps","Animation","DROP","draggable","transition","marginBottom","marginLeft","marginRight","styles","zoom","center","initialCenter","height","cursor","onMouseEnter","onMouseLeave","HelpWindow_HelpWindow","Sidebar_Sidebar","data-index","MarkerEditor_MarkerEditor","MapToolbar_MapToolbar","GoogleApiWrapper","apiKey","LoadingContainer","firebaseConfig","process","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","firebase","initializeApp","App","auth","onAuthStateChanged","user","BrowserRouter","Switch","Route","exact","component","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6UAIO,SAASA,EAAmBC,GAC/B,IAAIC,EAAOC,YAAmB,CAAEC,OAAQ,MAAOH,SAAUA,IAAYC,KAErE,MAAO,CACHG,OAAQ,CAAEC,EAAGJ,EAAK,GAAG,EAAGK,EAAGL,EAAK,IAChCM,KAAMN,EAAK,GACXO,MAAO,KACPC,YAAa,UACbC,aAAc,EACdC,UAAW,UACXC,YAAa,KAZrBC,IAAQC,IAAIC,KCFL,IAAMC,EAAU,CACrB,CACEC,YAAe,WACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEF,YAAe,cACfC,QAAW,CACT,CACEE,WAAc,SAIpB,CACEH,YAAe,mBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEF,YAAe,qBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,0BACfJ,YAAe,mBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,MACfJ,YAAe,cACfC,QAAW,CACT,CACEE,WAAc,SAIpB,CACEC,YAAe,MACfJ,YAAe,mBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,WACfJ,YAAe,WACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,WACfJ,YAAe,mBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,OACfJ,YAAe,WACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,OACfJ,YAAe,kBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,OACfJ,YAAe,cACfC,QAAW,CACT,CACEE,WAAc,SAIpB,CACEC,YAAe,OACfJ,YAAe,mBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,eACfJ,YAAe,WACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,eACfJ,YAAe,kBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,eACfJ,YAAe,mBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,UACfJ,YAAe,WACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,UACfJ,YAAe,cACfC,QAAW,CACT,CACEE,WAAc,SAIpB,CACEC,YAAe,kBACfJ,YAAe,mBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,QACfJ,YAAe,WACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,QACfJ,YAAe,mBACfC,QAAW,CACT,CACEC,MAAS,aAIf,CACEE,YAAe,QACfJ,YAAe,qBACfC,QAAW,CACT,CACEC,MAAS,cC7LJG,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEIQ,aAAef,EAAKgB,MAAMD,aAF9Bf,EAGIiB,oBAAsBjB,EAAKgB,MAAMC,oBAHrCjB,EAIIkB,kBAAoBlB,EAAKgB,MAAME,kBAJnClB,EAKImB,oBAAsBnB,EAAKgB,MAAMG,oBALrCnB,EAMIoB,oBAAsBpB,EAAKgB,MAAMI,oBANrCpB,EAOIqB,qBAAuBrB,EAAKgB,MAAMK,qBAPtCrB,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAJ,EAAAC,GAAAG,OAAAsB,EAAA,EAAAtB,CAAAJ,EAAA,EAAA2B,IAAA,SAAAC,MAAA,WASa,IAAAC,EAAAvB,KACL,IAAKA,KAAKa,MAAMW,aAAc,OAAOC,EAAAC,EAAAC,cAAA,YACrC,IAAIC,EAAS5B,KAAKa,MAAMW,aACxB,OACIC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACXJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,oBAAoBC,KAAK,OAAOC,KAAK,OAAOT,MAAOM,EAAOG,KAAMC,SAAU,SAACC,GAAD,OAAOV,EAAKX,aAAaqB,MACpHR,EAAAC,EAAAC,cAAA,SAAOE,UAAU,oBAAoBC,KAAK,OAAOC,KAAK,cAAcT,MAAOM,EAAOM,YAAaF,SAAU,SAACC,GAAD,OAAOV,EAAKT,oBAAoBmB,MAEzIR,EAAAC,EAAAC,cAAA,SAAOE,UAAU,oBAAoBC,KAAK,QAAQC,KAAK,YAAYT,MAAOM,EAAOO,QAAQpD,UAAWiD,SAAU,SAACC,GAAD,OAAOV,EAAKR,kBAAkBkB,MAC5IR,EAAAC,EAAAC,cAAA,SAAOE,UAAU,oBAAoBC,KAAK,QAAQC,KAAK,cAAcT,MAAOM,EAAOO,QAAQnD,YAAaoD,IAAI,IAAIC,IAAI,IAAIC,KAAK,OAAON,SAAU,SAACC,GAAD,OAAOV,EAAKP,oBAAoBiB,MAE9KR,EAAAC,EAAAC,cAAA,SAAOE,UAAU,oBAAoBC,KAAK,QAAQC,KAAK,cAAcT,MAAOM,EAAOO,QAAQtD,YAAamD,SAAU,SAACC,GAAD,OAAOV,EAAKN,oBAAoBgB,MAClJR,EAAAC,EAAAC,cAAA,SAAOE,UAAU,oBAAoBC,KAAK,QAAQC,KAAK,eAAeT,MAAOM,EAAOO,QAAQrD,aAAcsD,IAAI,IAAIC,IAAI,IAAIC,KAAK,IAAIN,SAAU,SAACC,GAAD,OAAOV,EAAKL,qBAAqBe,YAtBlMvC,EAAA,CAAkC6C,aCCrBC,SAAb,SAAA7C,GAAA,SAAA6C,IAAA,IAAA5C,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwC,GAAA,QAAAvC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAA0C,IAAA/B,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIqC,MAAQ,CACJC,QAAS7C,EAAKgB,MAAM6B,SAF5B7C,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAA0C,EAAA7C,GAAAG,OAAAsB,EAAA,EAAAtB,CAAA0C,EAAA,EAAAnB,IAAA,SAAAC,MAAA,WAMQ,OACIG,EAAAC,EAAAC,cAAA,WAASI,KAAK,cACVN,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAACC,gBAAiB,uBAAwBf,UAAW7B,KAAKa,MAAM6B,QAAU,4EAA8E,UAChKjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mEACV7B,KAAKa,MAAMgC,gBAVpCL,EAAA,CAAgCD,cCDnBO,EAAb,SAAAnD,GAAA,SAAAmD,IAAA,IAAAlD,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,GAAA,QAAA7C,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAgD,IAAArC,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIqC,MAAQ,CACJM,aAAc,MAFtBlD,EAsCImD,kBAAoB,SAACf,GACjBpC,EAAKoD,SAAS,CACVF,aAAcd,EAAEiB,gBAGpBrD,EAAKgB,MAAMsC,YAAYlB,GAEvB,IAAImB,EAAUC,OAAOC,SAASC,cAAc,8BACxCH,IAEAA,EAAQI,UAAUC,OAAO,aACzBL,EAAQI,UAAUtE,IAAI,eAE1B+C,EAAEiB,cAAcM,UAAUC,OAAO,cACjCxB,EAAEiB,cAAcM,UAAUtE,IAAI,cApDtCW,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAgD,EAAAnD,GAAAG,OAAAsB,EAAA,EAAAtB,CAAAgD,EAAA,EAAAzB,IAAA,wBAAAC,MAAA,WAMQ,QAAItB,KAAKa,MAAM6C,cANvB,CAAArC,IAAA,qBAAAC,MAAA,WAWQ,IAAKtB,KAAKa,MAAM6C,YAAa,CACzB,IAAIN,EAAUC,OAAOC,SAASC,cAAc,8BACxCH,IAEAA,EAAQI,UAAUC,OAAO,aACzBL,EAAQI,UAAUtE,IAAI,kBAhBtC,CAAAmC,IAAA,qBAAAC,MAAA,WAsBQtB,KAAKiD,SAAS,CACVU,eAAgB3D,KAAK4D,UAAU,CAAC,UAAU,aAAa,OAAO,YAAY,OAAO,SAAS,WAAW,gBAAgB,iBAAiB,aAAa,OAAO,OAAO,QAAQ,QAAQ,MAAM,YAvBnM,CAAAvC,IAAA,YAAAC,MAAA,SA2BcuC,GAAW,IAAAtC,EAAAvB,KACb8D,EAAQ,GAOZ,OALAD,EAAUE,QAAQ,SAACzC,EAAOD,GAEtByC,EAAME,KAAKvC,EAAAC,EAAAC,cAAA,OAAKsC,QAAS1C,EAAKyB,kBAAmB3B,IAAKA,EAAK6C,iBAAgB5C,EAAOO,UADlE,6CACwFJ,EAAAC,EAAAC,cAAA,KAAGE,UAAW,qBAAuBP,QAG1IwC,IAnCf,CAAAzC,IAAA,SAAAC,MAAA,WAwDQ,OACIG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,yBAAb,UACAJ,EAAAC,EAAAC,cAAA,OAAKwC,GAAG,cAActC,UAAU,gCAC3B7B,KAAKyC,MAAMkB,gBAEhBlC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,8BAA8BoC,QAASjE,KAAKa,MAAMuD,WAAjE,iBA9DhBtB,EAAA,CAAgCP,aCCnB8B,SAAb,SAAA1E,GAAA,SAAA0E,IAAA,IAAAzE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqE,GAAA,QAAApE,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAuE,IAAA5D,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIqC,MAAQ,CACJ6B,KAAMzE,EAAKgB,MAAMyD,MAAQ,QACzBC,KAAM1E,EAAKgB,MAAM0D,MAAQ,QAHjC1E,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAuE,EAAA1E,GAAAG,OAAAsB,EAAA,EAAAtB,CAAAuE,EAAA,EAAAhD,IAAA,SAAAC,MAAA,WAOQ,OAAQtB,KAAKyC,MAAM8B,MACf,IAAK,OACL,OACI9C,EAAAC,EAAAC,cAAA,WAASI,KAAK,eACVN,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAAC6B,MAAOxE,KAAKyC,MAAM6B,KAAMG,SAAU,MAAOC,KAAM1E,KAAKa,MAAM6B,QAAU,MAAQ,IAAI1C,KAAKyC,MAAM6B,MAAOzC,UAAW,wEACrH7B,KAAKa,MAAMgC,WAIxB,IAAK,QACL,OACIpB,EAAAC,EAAAC,cAAA,WAASI,KAAK,gBACVN,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAAC6B,MAAOxE,KAAKyC,MAAM6B,KAAMG,SAAU,MAAOE,MAAO3E,KAAKa,MAAM6B,QAAU,MAAQ,IAAI1C,KAAKyC,MAAM6B,MAAOzC,UAAW,wEACtH7B,KAAKa,MAAMgC,WAIxB,QACA,OAAO,UAzBnBwB,EAAA,CAA6B9B,cCSvBqC,6MACFnC,MAAQ,CACJoC,SAAUzF,EACV0F,oBAAoB,EACpBC,qBAAqB,EACrBC,mBAAmB,EACnBC,sBAAuB,UACvBC,iBAAkB/G,EAAmB,WACrCgH,YAAa,GACbC,aAAc,GACd5D,aAAc,KACdkC,aAAa,KAsCjB2B,kBAAoB,WAChBxF,EAAKoD,SAAS,CACV6B,oBAAqBjF,EAAK4C,MAAMqC,wBAGxCQ,iBAAmB,WACfzF,EAAKoD,SAAS,CACV+B,mBAAoBnF,EAAK4C,MAAMuC,uBAIvCO,iBAAmB,WACf1F,EAAKoD,SAAS,CACVuC,mBAAoB3F,EAAK4C,MAAM+C,uBAIvCC,uBAAyB,SAAC/D,GACtBA,EAAEwB,cAAcM,UAAUtE,IAAI,cAGlCwG,uBAAyB,SAAChE,GACtBA,EAAEwB,cAAcM,UAAUC,OAAO,cAKrCkC,cAAgB,SAACjE,EAAGkE,EAAG3D,GACnBpC,EAAKoD,SAAS,CACVzB,aAAc3B,EAAK4C,MAAM0C,YAAYzD,EAAEmE,OACvCd,qBAAqB,OAI7Be,mBAAqB,SAACpE,EAAGkE,EAAG3D,OAI5B8D,oBAAsB,SAACrE,GACnB7B,EAAKoD,SAAS,CACV+C,SAAUnG,EAAK4C,MAAM0C,YAAYzD,EAAEwB,cAAc+C,QAAQJ,OAAOK,cAIxEC,yBAA2B,SAACzE,GACxB7B,EAAKoD,SAAS,CACV+C,SAAUnG,EAAK4C,MAAM2C,aAAa1D,EAAEwB,cAAc+C,QAAQJ,OAAOK,cAIzEE,mBAAqB,SAACnE,GAClBpC,EAAKoD,SAAS,CACV8B,qBAAqB,EACrBvD,aAAc,KACdkC,aAAa,EACbuB,sBAAuBhD,EAAEiB,cAAc+C,QAAQ7H,SAC/C8G,iBAAkB/G,EAAmB8D,EAAEiB,cAAc+C,QAAQ7H,eAKrEiI,aAAe,SAAC3E,EAAGkE,EAAG3D,GAClB,GAAIpC,EAAK4C,MAAMiB,YAAa,CACxB,IAAI4C,EAAY,CACZT,MAAOhG,EAAK4C,MAAM0C,YAAYhF,OAC9B4B,KAAM,aACNG,YAAa,cACbgE,SAAU,CACNK,IAAKtE,EAAEuE,OAAOD,MACdE,IAAKxE,EAAEuE,OAAOC,OAElBrI,SAAUyB,EAAK4C,MAAMwC,sBACrB9C,QAAStC,EAAK4C,MAAMyC,kBAExBrF,EAAKoD,SAAS,CACVS,aAAa,EACbyB,YAAYrF,OAAA4G,EAAA,EAAA5G,CAAKD,EAAK4C,MAAM0C,aAAjBxE,OAAA,CAA8B2F,WAG7CzG,EAAKoD,SAAS,CACVzB,aAAc,KACduD,qBAAqB,OAKjC4B,QAAU,eASVC,mBAAqB,SAAC3E,GAClB,IAAIL,EAAS/B,EAAK4C,MAAMjB,aACxBI,EAAOG,KAAOE,EAAEiB,cAAc5B,MAC9BzB,EAAKoD,SAAS,CACVzB,aAAcI,OAItBiF,0BAA4B,SAAC5E,GACzB,IAAIL,EAAS/B,EAAK4C,MAAMjB,aACxBI,EAAOM,YAAcD,EAAEiB,cAAc5B,MACrCzB,EAAKoD,SAAS,CACVzB,aAAcI,OAItBkF,wBAA0B,SAAC7E,GACvB,IAAIL,EAAS/B,EAAK4C,MAAMjB,aACxBI,EAAOO,QAAQpD,UAAYkD,EAAEiB,cAAc5B,MAC3CM,EAAOmF,cAAe,EACtBlH,EAAKoD,SAAS,CACVzB,aAAcI,OAItBoF,0BAA4B,SAAC/E,GACzB,IAAIL,EAAS/B,EAAK4C,MAAMjB,aACxBI,EAAOO,QAAQnD,YAAciI,WAAYhF,EAAEiB,cAAc5B,OACzD,IAAI4F,EAAiBrH,EAAK4C,MAAM0C,YAChCvD,EAAOmF,cAAe,EACtBlH,EAAKoD,SAAS,CACVkC,YAAa+B,EACb1F,aAAc0F,EAAetF,EAAOiE,YAI5CsB,0BAA4B,SAAClF,GACzB,IAAIL,EAAS/B,EAAK4C,MAAMjB,aACxBI,EAAOO,QAAQtD,YAAcoD,EAAEiB,cAAc5B,MAC7CM,EAAOmF,cAAe,EACtBlH,EAAKoD,SAAS,CACVzB,aAAcI,OAItBwF,2BAA6B,SAACnF,GAC1B,IAAIL,EAAS/B,EAAK4C,MAAMjB,aACxBI,EAAOO,QAAQrD,aAAeuI,SAAUpF,EAAEiB,cAAc5B,OACxDM,EAAOmF,cAAe,EACtBlH,EAAKoD,SAAS,CACVzB,aAAcI,6EAKb,IAAAL,EAAAvB,KACDmF,EAAcnF,KAAKyC,MAAM0C,YAAYmC,IAAI,SAAC1F,EAAQiE,GAClD,IAAI0B,EAAQ9F,EAAAC,EAAAC,cAAC6F,EAAA,OAAD,CACRnG,IAAKwE,EACLA,MAAOA,EACP9D,KAAMH,EAAOG,KACbmE,SAAUtE,EAAOsE,SACjB7H,KAAMuD,EAAOO,QACbsF,UAAW7F,EAAOmF,aAAe,KAAO1D,OAAOqE,OAAOC,KAAKC,UAAUC,KACrE5D,QAAS1C,EAAKoE,cACdmC,WAAW,EACXf,aAAcnF,EAAOmF,eAGzB,OADAnF,EAAOmF,cAAe,EACfQ,IAGPnC,EAAepF,KAAKyC,MAAM2C,aAAakC,IAAI,SAAC1F,EAAQiE,GACpD,IAAI0B,EAAQ9F,EAAAC,EAAAC,cAAC6F,EAAA,OAAD,CACRnG,IAAKwE,EACLA,MAAOA,EACP9D,KAAMH,EAAOG,KACbmE,SAAUtE,EAAOsE,SACjB7H,KAAMuD,EAAOO,QACb8B,QAAS1C,EAAKuE,qBAGlB,OADAlE,EAAOmF,cAAe,EACfQ,IAGX,OACI9F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6F,EAAA,IAAD,CACI7E,MAAO,CAACoF,WAAY,OAAQC,aAAc,GAAIC,WAAYjI,KAAKyC,MAAMqC,mBAAqB,IAAM,EAAGoD,YAAalI,KAAKyC,MAAMuC,kBAAoB,IAAM,GACrJmD,OAAQnI,KAAKyC,MAAMoC,SACnBZ,QAASjE,KAAKqG,aACdqB,OAAQ1H,KAAKa,MAAM6G,OACnBU,KAAM,GACNC,OAAQrI,KAAKyC,MAAMuD,SAAWhG,KAAKyC,MAAMuD,SAAW,KACpDsC,cAAe,CACX/B,IAAK,kBACLE,KAAM,oBAGTtB,EACAC,GAGL3D,EAAAC,EAAAC,cAAA,WAASI,KAAK,YAAYF,UAAU,WAChCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2CAA2Cc,MAAO,CAAC4F,OAAQ,SACtE9G,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6CACXJ,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAAC6F,OAAQ,WAAYvE,QAASjE,KAAKqF,kBAAmBoD,aAAczI,KAAKyF,uBAAwBiD,aAAc1I,KAAK0F,uBAAwB7D,UAAU,OAAMJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,sCACrLJ,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAAC6F,OAAQ,WAAYvE,QAASjE,KAAKuF,iBAAkBkD,aAAczI,KAAKyF,uBAAwBiD,aAAc1I,KAAK0F,uBAAwB7D,UAAU,OAAMJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,0CACpLJ,EAAAC,EAAAC,cAAA,OAAKgB,MAAO,CAAC6F,OAAQ,WAAYvE,QAASjE,KAAKsF,iBAAkBmD,aAAczI,KAAKyF,uBAAwBiD,aAAc1I,KAAK0F,uBAAwB7D,UAAU,OAAMJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,4DAKhMJ,EAAAC,EAAAC,cAACgH,EAAD,CAAYjG,QAAS1C,KAAKyC,MAAM+C,oBAEhC/D,EAAAC,EAAAC,cAACiH,EAAD,CAASlG,QAAS1C,KAAKyC,MAAMqC,mBAAoBP,KAAK,OAAOD,KAAM,SAC/D7C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,0BACC3B,KAAKyC,MAAM0C,YAAYmC,IAAI,SAAC5F,EAAGkE,GAC5B,OAAOnE,EAAAC,EAAAC,cAAA,KAAGgB,MAAO,CAAC6F,OAAQ,WAAYvE,QAAS1C,EAAKwE,oBAAqB1E,IAAKK,EAAEmE,MAAOgD,aAAYnH,EAAEmE,MAAOhE,UAAW,qBAAuBH,EAAEtD,aAEpJqD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2BACC3B,KAAKyC,MAAM2C,aAAakC,IAAI,SAAC5F,EAAGkE,GAC7B,OAAOnE,EAAAC,EAAAC,cAAA,KAAGsC,QAAS1C,EAAK4E,yBAA0B9E,IAAKK,EAAEmE,MAAOgD,aAAYnH,EAAEmE,MAAOhE,UAAW,qBAAuBH,EAAEtD,gBAMzIqD,EAAAC,EAAAC,cAACiH,EAAD,CAAS/G,UAAU,MAAMa,QAAS1C,KAAKyC,MAAMsC,oBAAqBR,KAAK,OAAOD,KAAM,SAChF7C,EAAAC,EAAAC,cAACmH,EAAD,CACItH,aAAcxB,KAAKyC,MAAMjB,aACzBZ,aAAcZ,KAAK4G,mBACnB9F,oBAAqBd,KAAK6G,0BAC1B9F,kBAAmBf,KAAK8G,wBACxB9F,oBAAqBhB,KAAKgH,0BAC1B/F,oBAAqBjB,KAAKmH,0BAC1BjG,qBAAsBlB,KAAKoH,8BAInC3F,EAAAC,EAAAC,cAACiH,EAAD,CAASlG,QAAS1C,KAAKyC,MAAMuC,kBAAmBT,KAAK,SACjD9C,EAAAC,EAAAC,cAACoH,EAAD,CAAY5F,YAAanD,KAAKoG,mBAAoBhC,UAAWpE,KAAK2G,QAASjD,YAAa1D,KAAKyC,MAAMiB,uBAhSjGnB,aAuSPyG,6BAAiB,CAC5BC,OAAQ,0CACRC,iBAAkB,kBAAMzH,EAAAC,EAAAC,cAAA,cAFbqH,CAGZpE,GC7SGuE,EAAiB,CACrBF,OAAQG,8CAAYC,2BACpBC,WAAYF,8CAAYG,+BACxBC,YAAaJ,8CAAYK,gCACzBC,UAAWN,8CAAYO,8BACvBC,cAAeR,8CAAYS,kCAC3BC,kBAAmBV,8CAAYW,wCAEjCC,IAASC,cAAcd,OA4BRe,8LAzBO,IAAArK,EAAAG,KAClBgK,IAASG,OAAOC,mBAAmB,SAACC,GAClCxK,EAAKoD,SAAS,CACZoH,KAAMA,uCAMV,OACE5I,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,KACI7I,EAAAC,EAAAC,cAAA,WAASI,KAAK,WACZN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,uBACbJ,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACE9I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOC,OAAK,EAAC9L,KAAK,IAAI+L,UAAW9F,IACjCnD,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOC,OAAK,EAAC9L,KAAK,WAAW+L,UAAW9F,IACxCnD,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOC,OAAK,EAAC9L,KAAK,oBAAoB+L,UAAW9F,eAjB/CrC,aCTEoI,QACW,cAA7BtH,OAAOuH,SAASC,UAEe,UAA7BxH,OAAOuH,SAASC,UAEhBxH,OAAOuH,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOvJ,EAAAC,EAAAC,cAACsJ,EAAD,MAAS3H,SAAS4H,eAAe,SDoH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.95c805f4.chunk.js","sourcesContent":["import { library, findIconDefinition } from '@fortawesome/fontawesome-svg-core'\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\nlibrary.add(fas)\r\n\r\nexport function getMarkerSVGByName(iconName) {\r\n    let icon = findIconDefinition({ prefix: 'fas', iconName: iconName }).icon\r\n\r\n    return {\r\n        anchor: { x: icon[0]/2, y: icon[1] },\r\n        path: icon[4],\r\n        scale: 0.075,\r\n        strokeColor: '#000000',\r\n        strokeWeight: 1,\r\n        fillColor: '#ffffff',\r\n        fillOpacity: 0.66\r\n    }\r\n}","export const testing = [\r\n  {\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#242f3e\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"elementType\": \"labels.icon\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#746855\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"elementType\": \"labels.text.stroke\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#242f3e\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"administrative.locality\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#d59563\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi\",\r\n    \"elementType\": \"labels.icon\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#d59563\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.park\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#263c3f\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.park\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#6b9a76\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#38414e\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road\",\r\n    \"elementType\": \"geometry.stroke\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#212a37\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road\",\r\n    \"elementType\": \"labels.icon\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#9ca5b3\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#746855\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway\",\r\n    \"elementType\": \"geometry.stroke\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#1f2835\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#f3d19c\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"transit\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#2f3948\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"transit\",\r\n    \"elementType\": \"labels.icon\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"transit.station\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#d59563\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"water\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#17263c\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"water\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#515c6d\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"water\",\r\n    \"elementType\": \"labels.text.stroke\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#17263c\"\r\n      }\r\n    ]\r\n  }\r\n]","import React, { Component } from 'react'\r\n\r\nexport class MarkerEditor extends Component {\r\n\r\n    onNameChange = this.props.onNameChange\r\n    onDescriptionChange = this.props.onDescriptionChange\r\n    onFillColorChange = this.props.onFillColorChange\r\n    onFillOpacityChange = this.props.onFillOpacityChange\r\n    onStrokeColorChange = this.props.onStrokeColorChange\r\n    onStrokeWeightChange = this.props.onStrokeWeightChange\r\n\r\n    render() {\r\n        if (!this.props.activeMarker) return <div></div>\r\n        let marker = this.props.activeMarker\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col m-2\">\r\n                    <input className=\"form-control mb-2\" type=\"text\" name=\"name\" value={marker.name} onChange={(e) => this.onNameChange(e)} />\r\n                    <input className=\"form-control mb-2\" type=\"text\" name=\"description\" value={marker.description} onChange={(e) => this.onDescriptionChange(e)} />\r\n\r\n                    <input className=\"form-control mb-2\" type=\"color\" name=\"fillColor\" value={marker.iconSVG.fillColor} onChange={(e) => this.onFillColorChange(e)} />\r\n                    <input className=\"form-control mb-2\" type=\"range\" name=\"fillOpacity\" value={marker.iconSVG.fillOpacity} min=\"0\" max=\"1\" step=\"0.01\" onChange={(e) => this.onFillOpacityChange(e)} />\r\n\r\n                    <input className=\"form-control mb-2\" type=\"color\" name=\"strokeColor\" value={marker.iconSVG.strokeColor} onChange={(e) => this.onStrokeColorChange(e)} />\r\n                    <input className=\"form-control mb-2\" type=\"range\" name=\"strokeWeight\" value={marker.iconSVG.strokeWeight} min=\"0\" max=\"5\" step=\"1\" onChange={(e) => this.onStrokeWeightChange(e)} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport '../../css/helpwindow.css'\r\n\r\nexport class HelpWindow extends Component {\r\n    state = {\r\n        visible: this.props.visible\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <section name=\"helpwindow\">\r\n                <div style={{backgroundColor: \"rgba(0, 0, 0, 0.33)\"}} className={this.props.visible ? \"transition-1s position-absolute w-100 h-100 d-flex justify-content-center\" : \"d-none\"}>\r\n                    <div className=\"mx-3 py-2 px-3 col-md-6 h-50 my-auto bg-dark text-white rounded\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport class MapToolbar extends Component {\r\n    state = {\r\n        selectedIcon: null\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        if (this.props.placeMarker) return true\r\n        return false\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.placeMarker) {\r\n            let oldIcon = window.document.querySelector('#markerIcons div.text-info')\r\n            if (oldIcon)\r\n            {\r\n                oldIcon.classList.remove('text-info')\r\n                oldIcon.classList.add('text-white')\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            availableIcons: this.makeIcons(['map-pin','map-marker','flag','thumbtack','beer','coffee','utensils','birthday-cake','graduation-cap','university','home','info','music','plane','bus','car'])\r\n        })\r\n    }\r\n\r\n    makeIcons(iconNames) {\r\n        let stack = []\r\n\r\n        iconNames.forEach((value, key) => {\r\n            let className = \"text-white col-6 mt-3 py-3 border pointer\"\r\n            stack.push(<div onClick={this.markerIconClicked} key={key} data-icon-name={value} className={className}><i className={\"fa fa-fw fa-2x fa-\" + value}></i></div>)\r\n        })\r\n\r\n        return stack\r\n    }\r\n\r\n    markerIconClicked = (e) => {\r\n        this.setState({\r\n            selectedIcon: e.currentTarget\r\n        })\r\n\r\n        this.props.onIconClick(e)\r\n\r\n        let oldIcon = window.document.querySelector('#markerIcons div.text-info')\r\n        if (oldIcon)\r\n        {\r\n            oldIcon.classList.remove('text-info')\r\n            oldIcon.classList.add('text-white')\r\n        }\r\n        e.currentTarget.classList.remove('text-white')\r\n        e.currentTarget.classList.add('text-info')\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"pt-2 mb-0 text-center\">Marker</p>\r\n                <div id=\"markerIcons\" className=\"d-flex flex-wrap text-center\">\r\n                    {this.state.availableIcons}\r\n                </div>\r\n                <div className=\"mt-3 btn btn-info btn-block\" onClick={this.props.onMapSave}>Save Map</div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport '../../css/sidebar.css'\r\n\r\nexport class Sidebar extends Component {\r\n    state = {\r\n        size: this.props.size || \"150px\",\r\n        side: this.props.side || \"left\"\r\n    }\r\n\r\n    render() { \r\n        switch (this.state.side) {\r\n            case \"left\":\r\n            return (\r\n                <section name=\"leftsidebar\">\r\n                    <div style={{width: this.state.size, maxWidth: \"50%\", left: this.props.visible ? '0px' : '-'+this.state.size}} className={\"transition-1s bg-dark text-white h-100 d-inline-block position-fixed\"}>\r\n                        {this.props.children}\r\n                    </div>\r\n                </section>\r\n            )\r\n            case \"right\":\r\n            return (\r\n                <section name=\"rightsidebar\">\r\n                    <div style={{width: this.state.size, maxWidth: \"50%\", right: this.props.visible ? '0px' : '-'+this.state.size}} className={\"transition-1s bg-dark text-white h-100 d-inline-block position-fixed\"}>\r\n                        {this.props.children}\r\n                    </div>\r\n                </section>\r\n            )\r\n            default:\r\n            return null\r\n        }\r\n        \r\n    }\r\n}","//#region imports\r\nimport React, { Component } from 'react'\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react'\r\nimport { getMarkerSVGByName } from './MarkerIcons'\r\nimport { testing } from '../../MapStyles'\r\n\r\nimport { MarkerEditor } from './MarkerEditor'\r\nimport { HelpWindow } from '../ui/HelpWindow'\r\nimport { MapToolbar } from './MapToolbar'\r\nimport { Sidebar } from '../ui/Sidebar'\r\n//#endregion\r\n\r\nclass MapView extends Component {\r\n    state = {\r\n        mapStyle: testing,\r\n        leftSidebarVisible: true,\r\n        markerEditorVisible: false,\r\n        mapToolbarVisible: true,\r\n        currentMarkerIconName: 'map-pin',\r\n        currentMarkerSVG: getMarkerSVGByName('map-pin'),\r\n        userMarkers: [],\r\n        otherMarkers: [],\r\n        activeMarker: null,\r\n        placeMarker: false\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     if (this.props.match.params.id) {\r\n    //         let url = 'http://localhost:3001/' + this.props.match.params.id\r\n    //         if (this.props.match.params.others) {\r\n    //             url += '/with/' + this.props.match.params.others\r\n    //         }\r\n    //         axios.get(url).then(res => {\r\n    //             if (res.data.otherMarkers.length > 0) {\r\n    //                 let otherMarkers = []\r\n    //                 res.data.otherMarkers.forEach(data => {\r\n    //                     let markers = JSON.parse(data.markers)\r\n    //                     markers.forEach(marker => {\r\n    //                         let iconSVG = getMarkerSVGByName(marker.iconName)\r\n    //                         marker.iconSVG.path = iconSVG.path\r\n    //                         otherMarkers.push(marker)\r\n    //                     })\r\n    //                 })\r\n    //                 this.setState({\r\n    //                     otherMarkers: otherMarkers\r\n    //                 })\r\n    //             }\r\n\r\n    //             let userMarkers = res.data.userMarkers ? JSON.parse(res.data.userMarkers.markers) : []\r\n    //             userMarkers.forEach((marker) => {\r\n    //                 let iconSVG = getMarkerSVGByName(marker.iconName)\r\n    //                 marker.iconSVG.path = iconSVG.path\r\n    //             })\r\n    //             this.setState({\r\n    //                 userMarkers: userMarkers\r\n    //             })\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    //#region toggle events\r\n    toggleLeftSidebar = () => {\r\n        this.setState({\r\n            leftSidebarVisible: !this.state.leftSidebarVisible\r\n        })\r\n    }\r\n    toggleMapToolbar = () => {\r\n        this.setState({\r\n            mapToolbarVisible: !this.state.mapToolbarVisible\r\n        })\r\n    }\r\n\r\n    toggleHelpWindow = () => {\r\n        this.setState({\r\n            helpWindowVisible: !this.state.helpWindowVisible\r\n        })\r\n    }\r\n\r\n    actionButtonMouseEnter = (a) => {\r\n        a.currentTarget.classList.add(\"bg-info\")\r\n    }\r\n\r\n    actionButtonMouseLeave = (a) => {\r\n        a.currentTarget.classList.remove(\"bg-info\")\r\n    }\r\n    //#endregion\r\n\r\n    //#region marker(icon) events\r\n    onMarkerClick = (a, b, e) => {\r\n        this.setState({\r\n            activeMarker: this.state.userMarkers[a.index],\r\n            markerEditorVisible: true\r\n        })\r\n    }\r\n\r\n    onOtherMarkerClick = (a, b, e) => {\r\n        // render an infowindow?\r\n    }\r\n\r\n    globalMarkerClicked = (a) => {\r\n        this.setState({\r\n            panToPos: this.state.userMarkers[a.currentTarget.dataset.index].position\r\n        })\r\n    }\r\n\r\n    globalOtherMarkerClicked = (a) => {\r\n        this.setState({\r\n            panToPos: this.state.otherMarkers[a.currentTarget.dataset.index].position\r\n        })\r\n    }\r\n\r\n    toolbarIconClicked = (e) => {\r\n        this.setState({\r\n            markerEditorVisible: false,\r\n            activeMarker: null,\r\n            placeMarker: true,\r\n            currentMarkerIconName: e.currentTarget.dataset.iconName,\r\n            currentMarkerSVG: getMarkerSVGByName(e.currentTarget.dataset.iconName),\r\n        })\r\n    }\r\n    //#endregion\r\n\r\n    onMapClicked = (a, b, e) => {\r\n        if (this.state.placeMarker) {\r\n            let newMarker = {\r\n                index: this.state.userMarkers.length,\r\n                name: \"new marker\",\r\n                description: \"description\",\r\n                position: {\r\n                    lat: e.latLng.lat(),\r\n                    lng: e.latLng.lng()\r\n                },\r\n                iconName: this.state.currentMarkerIconName,\r\n                iconSVG: this.state.currentMarkerSVG\r\n            }\r\n            this.setState({\r\n                placeMarker: false,\r\n                userMarkers: [...this.state.userMarkers, newMarker]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                activeMarker: null,\r\n                markerEditorVisible: false\r\n            })\r\n        }\r\n    }\r\n\r\n    saveMap = () => {\r\n        // let data = JSON.stringify(this.state.userMarkers)\r\n        // axios.post('http://localhost:3001', querystring.stringify({markers: data})).then((res) => {\r\n        //     window.location.href = \"http://localhost:3000/\" + res.data\r\n        // })\r\n    }\r\n\r\n    // TODO get this logic working from within the MarkerEditor component\r\n    //#region markerEditorEvents\r\n    onMarkerNameChange = (e) => {\r\n        let marker = this.state.activeMarker\r\n        marker.name = e.currentTarget.value\r\n        this.setState({\r\n            activeMarker: marker\r\n        })\r\n    }\r\n\r\n    onMarkerDescriptionChange = (e) => {\r\n        let marker = this.state.activeMarker\r\n        marker.description = e.currentTarget.value\r\n        this.setState({\r\n            activeMarker: marker\r\n        })\r\n    }\r\n\r\n    onMarkerFillColorChange = (e) => {\r\n        let marker = this.state.activeMarker\r\n        marker.iconSVG.fillColor = e.currentTarget.value\r\n        marker.shouldRender = true\r\n        this.setState({\r\n            activeMarker: marker\r\n        })\r\n    }\r\n\r\n    onMarkerFillOpacityChange = (e) => {\r\n        let marker = this.state.activeMarker\r\n        marker.iconSVG.fillOpacity = parseFloat( e.currentTarget.value )\r\n        let newUserMarkers = this.state.userMarkers\r\n        marker.shouldRender = true\r\n        this.setState({\r\n            userMarkers: newUserMarkers,\r\n            activeMarker: newUserMarkers[marker.index]\r\n        })\r\n    }\r\n\r\n    onMarkerStrokeColorChange = (e) => {\r\n        let marker = this.state.activeMarker\r\n        marker.iconSVG.strokeColor = e.currentTarget.value\r\n        marker.shouldRender = true\r\n        this.setState({\r\n            activeMarker: marker\r\n        })\r\n    }\r\n\r\n    onMarkerStrokeWeightChange = (e) => {\r\n        let marker = this.state.activeMarker\r\n        marker.iconSVG.strokeWeight = parseInt( e.currentTarget.value )\r\n        marker.shouldRender = true\r\n        this.setState({\r\n            activeMarker: marker\r\n        })\r\n    }\r\n    //#endregion\r\n    \r\n    render() {\r\n        let userMarkers = this.state.userMarkers.map((marker, index) => {\r\n            let thing = <Marker\r\n                key={index}\r\n                index={index}\r\n                name={marker.name}\r\n                position={marker.position}\r\n                icon={marker.iconSVG}\r\n                animation={marker.shouldRender ? null : window.google.maps.Animation.DROP}\r\n                onClick={this.onMarkerClick}\r\n                draggable={true}\r\n                shouldRender={marker.shouldRender}\r\n            />\r\n            marker.shouldRender = false\r\n            return thing\r\n        })\r\n\r\n        let otherMarkers = this.state.otherMarkers.map((marker, index) => {\r\n            let thing = <Marker\r\n                key={index}\r\n                index={index}\r\n                name={marker.name}\r\n                position={marker.position}\r\n                icon={marker.iconSVG}\r\n                onClick={this.onOtherMarkerClick}\r\n            />\r\n            marker.shouldRender = false\r\n            return thing\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <Map\r\n                    style={{transition: \"0.5s\", marginBottom: 46, marginLeft: this.state.leftSidebarVisible ? 300 : 0, marginRight: this.state.mapToolbarVisible ? 150 : 0}}\r\n                    styles={this.state.mapStyle}\r\n                    onClick={this.onMapClicked}\r\n                    google={this.props.google}\r\n                    zoom={10}\r\n                    center={this.state.panToPos ? this.state.panToPos : null}\r\n                    initialCenter={{\r\n                        lat: 33.83008972168741,\r\n                        lng: -84.35267661111448\r\n                    }}>\r\n\r\n                    {userMarkers}\r\n                    {otherMarkers}\r\n                </Map>\r\n\r\n                <section name=\"actionBar\" className=\"d-block\">\r\n                    <div className=\"container-fluid p-0 fixed-bottom bg-dark\" style={{height: \"46px\"}}>\r\n                        <div className=\"d-flex justify-content-around text-center\">\r\n                            <div style={{cursor: \"pointer\"}} onClick={this.toggleLeftSidebar} onMouseEnter={this.actionButtonMouseEnter} onMouseLeave={this.actionButtonMouseLeave} className=\"col\"><i className=\"fas fa-lg fa-list p-3 text-white\"></i></div>\r\n                            <div style={{cursor: \"pointer\"}} onClick={this.toggleHelpWindow} onMouseEnter={this.actionButtonMouseEnter} onMouseLeave={this.actionButtonMouseLeave} className=\"col\"><i className=\"fas fa-lg fa-question p-3 text-white\"></i></div>\r\n                            <div style={{cursor: \"pointer\"}} onClick={this.toggleMapToolbar} onMouseEnter={this.actionButtonMouseEnter} onMouseLeave={this.actionButtonMouseLeave} className=\"col\"><i className=\"fas fa-lg fa-list fa-flip-horizontal p-3 text-white\"></i></div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <HelpWindow visible={this.state.helpWindowVisible} />\r\n\r\n                <Sidebar visible={this.state.leftSidebarVisible} side=\"left\" size={\"300px\"}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h4>Main Markers</h4>\r\n                            {this.state.userMarkers.map((a, b) =>{\r\n                                return <i style={{cursor: \"pointer\"}} onClick={this.globalMarkerClicked} key={a.index} data-index={a.index} className={\"fa fa-fw fa-2x fa-\" + a.iconName}></i>\r\n                            })}\r\n                            <hr></hr>\r\n                            <h4>Other Markers</h4>\r\n                            {this.state.otherMarkers.map((a, b) =>{\r\n                                return <i onClick={this.globalOtherMarkerClicked} key={a.index} data-index={a.index} className={\"fa fa-fw fa-2x fa-\" + a.iconName}></i>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </Sidebar>\r\n\r\n                <Sidebar className=\"p-4\" visible={this.state.markerEditorVisible} side=\"left\" size={\"300px\"}>\r\n                    <MarkerEditor\r\n                        activeMarker={this.state.activeMarker}\r\n                        onNameChange={this.onMarkerNameChange}\r\n                        onDescriptionChange={this.onMarkerDescriptionChange}\r\n                        onFillColorChange={this.onMarkerFillColorChange}\r\n                        onFillOpacityChange={this.onMarkerFillOpacityChange}\r\n                        onStrokeColorChange={this.onMarkerStrokeColorChange}\r\n                        onStrokeWeightChange={this.onMarkerStrokeWeightChange}\r\n                    />\r\n                </Sidebar>\r\n                \r\n                <Sidebar visible={this.state.mapToolbarVisible} side=\"right\">\r\n                    <MapToolbar onIconClick={this.toolbarIconClicked} onMapSave={this.saveMap} placeMarker={this.state.placeMarker} />\r\n                </Sidebar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyCwS80CMHsyEiDxcPmfXkDyPwulq9ltuxE',\r\n    LoadingContainer: () => <div></div>\r\n})(MapView)\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport firebase from 'firebase'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'\r\n\r\nimport MapView from './components/map/MapView'\r\n// import Login from './components/auth/Login'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID\r\n}\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      this.setState({\r\n        user: user\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n          <section name=\"content\">\r\n            <div className=\"container-fluid p-0\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={MapView} />\r\n                <Route exact path=\"/map/:id\" component={MapView} />\r\n                <Route exact path=\"/:id/with/:others\" component={MapView} />\r\n              </Switch>\r\n            </div>\r\n          </section>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}