{"version":3,"sources":["components/MarkerIcons.jsx","MapStyles.js","components/MarkerEditor.jsx","components/HelpWindow.jsx","components/MapToolbar.jsx","components/Sidebar.jsx","models/QMarker.js","components/MapView.jsx","App.js","serviceWorker.js","index.js"],"names":["getMarkerSVGByName","iconName","icon","findIconDefinition","prefix","anchor","x","y","path","scale","strokeColor","strokeWeight","fillColor","fillOpacity","library","add","fas","testing","elementType","stylers","color","visibility","featureType","MarkerEditor","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","onNameChange","props","onDescriptionChange","onFillColorChange","onFillOpacityChange","onStrokeColorChange","onStrokeWeightChange","inherits","createClass","key","value","_this2","activeMarker","react_default","a","createElement","marker","className","type","name","onChange","e","description","iconSVG","min","max","step","Component","HelpWindow","state","visible","style","backgroundColor","MapToolbar","selectedIcon","markerIconClicked","setState","currentTarget","onIconClick","oldIcon","window","document","querySelector","classList","remove","placeMarker","availableIcons","makeIcons","iconNames","stack","forEach","push","onClick","data-icon-name","id","onMapSave","Sidebar","size","side","width","maxWidth","left","children","right","QMarker","opts","index","position","MapView","mapStyle","leftSidebarVisible","markerEditorVisible","mapToolbarVisible","currentMarkerIconName","currentMarkerSVG","userMarkers","otherMarkers","toggleLeftSidebar","toggleMapToolbar","toggleHelpWindow","helpWindowVisible","actionButtonMouseEnter","actionButtonMouseLeave","onMarkerClick","b","onOtherMarkerClick","globalMarkerClicked","panToPos","dataset","globalOtherMarkerClicked","toolbarIconClicked","onMapClicked","newMarker","lat","latLng","lng","toConsumableArray","saveMap","data","JSON","stringify","axios","post","querystring","markers","then","res","location","href","onMarkerNameChange","onMarkerDescriptionChange","onMarkerFillColorChange","shouldRender","onMarkerFillOpacityChange","parseFloat","newUserMarkers","onMarkerStrokeColorChange","onMarkerStrokeWeightChange","parseInt","console","log","google","maps","StreetViewPanorama","match","params","url","others","get","parse","_this3","map","thing","dist","animation","Animation","DROP","draggable","transition","marginBottom","marginLeft","marginRight","styles","zoom","center","initialCenter","iw","height","cursor","onMouseEnter","onMouseLeave","HelpWindow_HelpWindow","Sidebar_Sidebar","data-index","MarkerEditor_MarkerEditor","MapToolbar_MapToolbar","GoogleApiWrapper","apiKey","LoadingContainer","AuthRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","renderMergedProps","finalProps","React","App","BrowserRouter","Switch","App_AuthRoute","exact","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8fb8e2f.chunk.js","sourcesContent":["import { library, findIconDefinition } from '@fortawesome/fontawesome-svg-core'\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\nlibrary.add(fas)\r\n\r\nexport function getMarkerSVGByName(iconName) {\r\n    let icon = findIconDefinition({ prefix: 'fas', iconName: iconName }).icon\r\n\r\n    return {\r\n        anchor: { x: icon[0]/2, y: icon[1] },\r\n        path: icon[4],\r\n        scale: 0.075,\r\n        strokeColor: '#000000',\r\n        strokeWeight: 1,\r\n        fillColor: '#ffffff',\r\n        fillOpacity: 0.66\r\n    }\r\n}","export const testing = [\r\n  {\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#242f3e\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"elementType\": \"labels.icon\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#746855\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"elementType\": \"labels.text.stroke\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#242f3e\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"administrative.locality\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#d59563\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi\",\r\n    \"elementType\": \"labels.icon\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#d59563\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.park\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#263c3f\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.park\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#6b9a76\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#38414e\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road\",\r\n    \"elementType\": \"geometry.stroke\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#212a37\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road\",\r\n    \"elementType\": \"labels.icon\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#9ca5b3\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#746855\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway\",\r\n    \"elementType\": \"geometry.stroke\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#1f2835\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#f3d19c\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"transit\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#2f3948\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"transit\",\r\n    \"elementType\": \"labels.icon\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"transit.station\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#d59563\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"water\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#17263c\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"water\",\r\n    \"elementType\": \"labels.text.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#515c6d\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"water\",\r\n    \"elementType\": \"labels.text.stroke\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#17263c\"\r\n      }\r\n    ]\r\n  }\r\n]","import React, { Component } from 'react'\r\n\r\nexport class MarkerEditor extends Component {\r\n\r\n    onNameChange = this.props.onNameChange\r\n    onDescriptionChange = this.props.onDescriptionChange\r\n    onFillColorChange = this.props.onFillColorChange\r\n    onFillOpacityChange = this.props.onFillOpacityChange\r\n    onStrokeColorChange = this.props.onStrokeColorChange\r\n    onStrokeWeightChange = this.props.onStrokeWeightChange\r\n\r\n    render() {\r\n        if (!this.props.activeMarker) return <div></div>\r\n        let marker = this.props.activeMarker\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col m-2\">\r\n                    <input className=\"form-control mb-2\" type=\"text\" name=\"name\" value={marker.name} onChange={(e) => this.onNameChange(e)} />\r\n                    <input className=\"form-control mb-2\" type=\"text\" name=\"description\" value={marker.description} onChange={(e) => this.onDescriptionChange(e)} />\r\n\r\n                    <input className=\"form-control mb-2\" type=\"color\" name=\"fillColor\" value={marker.iconSVG.fillColor} onChange={(e) => this.onFillColorChange(e)} />\r\n                    <input className=\"form-control mb-2\" type=\"range\" name=\"fillOpacity\" value={marker.iconSVG.fillOpacity} min=\"0\" max=\"1\" step=\"0.01\" onChange={(e) => this.onFillOpacityChange(e)} />\r\n\r\n                    <input className=\"form-control mb-2\" type=\"color\" name=\"strokeColor\" value={marker.iconSVG.strokeColor} onChange={(e) => this.onStrokeColorChange(e)} />\r\n                    <input className=\"form-control mb-2\" type=\"range\" name=\"strokeWeight\" value={marker.iconSVG.strokeWeight} min=\"0\" max=\"5\" step=\"1\" onChange={(e) => this.onStrokeWeightChange(e)} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport '../css/helpwindow.css'\r\n\r\nexport class HelpWindow extends Component {\r\n    state = {\r\n        visible: this.props.visible\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <section name=\"helpwindow\">\r\n                <div style={{backgroundColor: \"rgba(0, 0, 0, 0.33)\"}} className={this.props.visible ? \"transition-1s position-absolute w-100 h-100 d-flex justify-content-center\" : \"d-none\"}>\r\n                    <div className=\"mx-3 py-2 px-3 col-md-6 h-50 my-auto bg-dark text-white rounded\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <h3 className=\"text-center\">help window</h3>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                blah blah blah\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport class MapToolbar extends Component {\r\n    state = {\r\n        selectedIcon: null\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        if (this.props.placeMarker) return true\r\n        return false\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (!this.props.placeMarker) {\r\n            let oldIcon = window.document.querySelector('#markerIcons div.text-info')\r\n            if (oldIcon)\r\n            {\r\n                oldIcon.classList.remove('text-info')\r\n                oldIcon.classList.add('text-white')\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            availableIcons: this.makeIcons(['map-pin','map-marker','flag','thumbtack','beer','coffee','utensils','birthday-cake','graduation-cap','university','home','info','music','plane','bus','car'])\r\n        })\r\n    }\r\n\r\n    makeIcons(iconNames) {\r\n        let stack = []\r\n\r\n        iconNames.forEach((value, key) => {\r\n            let className = \"text-white col-6 mt-3 py-3 border pointer\"\r\n            stack.push(<div onClick={this.markerIconClicked} key={key} data-icon-name={value} className={className}><i className={\"fa fa-fw fa-2x fa-\" + value}></i></div>)\r\n        })\r\n\r\n        return stack\r\n    }\r\n\r\n    markerIconClicked = (e) => {\r\n        this.setState({\r\n            selectedIcon: e.currentTarget\r\n        })\r\n\r\n        this.props.onIconClick(e)\r\n\r\n        let oldIcon = window.document.querySelector('#markerIcons div.text-info')\r\n        if (oldIcon)\r\n        {\r\n            oldIcon.classList.remove('text-info')\r\n            oldIcon.classList.add('text-white')\r\n        }\r\n        e.currentTarget.classList.remove('text-white')\r\n        e.currentTarget.classList.add('text-info')\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"pt-2 mb-0 text-center\">Marker</p>\r\n                <div id=\"markerIcons\" className=\"d-flex flex-wrap text-center\">\r\n                    {this.state.availableIcons}\r\n                </div>\r\n                <div className=\"mt-3 btn btn-info btn-block\" onClick={this.props.onMapSave}>Save Map</div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport '../css/sidebar.css'\r\n\r\nexport class Sidebar extends Component {\r\n    state = {\r\n        size: this.props.size || \"150px\",\r\n        side: this.props.side || \"left\"\r\n    }\r\n\r\n    render() { \r\n        switch (this.state.side) {\r\n            case \"left\":\r\n            return (\r\n                <section name=\"leftsidebar\">\r\n                    <div style={{width: this.state.size, maxWidth: \"50%\", left: this.props.visible ? '0px' : '-'+this.state.size}} className={\"transition-1s bg-dark text-white h-100 d-inline-block position-fixed\"}>\r\n                        {this.props.children}\r\n                    </div>\r\n                </section>\r\n            )\r\n            case \"right\":\r\n            return (\r\n                <section name=\"rightsidebar\">\r\n                    <div style={{width: this.state.size, maxWidth: \"50%\", right: this.props.visible ? '0px' : '-'+this.state.size}} className={\"transition-1s bg-dark text-white h-100 d-inline-block position-fixed\"}>\r\n                        {this.props.children}\r\n                    </div>\r\n                </section>\r\n            )\r\n            default:\r\n            return null\r\n        }\r\n        \r\n    }\r\n}","export class QMarker {\r\n    constructor(opts) {\r\n        this.index = opts.index\r\n        this.iconName = opts.iconName\r\n        this.iconSVG = opts.iconSVG\r\n        this.position = opts.position\r\n        this.name = opts.name\r\n        this.description = opts.description\r\n    }\r\n}","//#region imports\r\nimport React, { Component } from 'react'\r\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react'\r\nimport axios from 'axios'\r\nimport querystring from 'querystring'\r\nimport { getMarkerSVGByName } from './MarkerIcons'\r\nimport { testing } from '../MapStyles'\r\n\r\nimport { MarkerEditor } from './MarkerEditor'\r\nimport { HelpWindow } from './HelpWindow'\r\nimport { MapToolbar } from './MapToolbar'\r\nimport { Sidebar } from './Sidebar'\r\nimport { QMarker } from '../models/QMarker'\r\n//#endregion\r\n\r\nclass MapView extends Component {\r\n    state = {\r\n        mapStyle: testing,\r\n        leftSidebarVisible: true,\r\n        markerEditorVisible: false,\r\n        mapToolbarVisible: true,\r\n        currentMarkerIconName: 'map-pin',\r\n        currentMarkerSVG: getMarkerSVGByName('map-pin'),\r\n        userMarkers: [],\r\n        otherMarkers: [],\r\n        activeMarker: null,\r\n        placeMarker: false\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log (this.props.google.maps.StreetViewPanorama)\r\n        if (this.props.match.params.id) {\r\n            let url = 'http://localhost:3001/' + this.props.match.params.id\r\n            if (this.props.match.params.others) {\r\n                url += '/with/' + this.props.match.params.others\r\n            }\r\n            axios.get(url).then(res => {\r\n                if (res.data.otherMarkers.length > 0) {\r\n                    let otherMarkers = []\r\n                    res.data.otherMarkers.forEach(data => {\r\n                        let markers = JSON.parse(data.markers)\r\n                        markers.forEach(marker => {\r\n                            otherMarkers.push(marker)\r\n                        })\r\n                    })\r\n                    this.setState({\r\n                        otherMarkers: otherMarkers\r\n                    })\r\n                }\r\n                this.setState({\r\n                    userMarkers: res.data.userMarkers ? JSON.parse(res.data.userMarkers.markers) : []\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    //#region toggle events\r\n    toggleLeftSidebar = () => {\r\n        this.setState({\r\n            leftSidebarVisible: !this.state.leftSidebarVisible\r\n        })\r\n    }\r\n    toggleMapToolbar = () => {\r\n        this.setState({\r\n            mapToolbarVisible: !this.state.mapToolbarVisible\r\n        })\r\n    }\r\n\r\n    toggleHelpWindow = () => {\r\n        this.setState({\r\n            helpWindowVisible: !this.state.helpWindowVisible\r\n        })\r\n    }\r\n\r\n    actionButtonMouseEnter = (a) => {\r\n        a.currentTarget.classList.add(\"bg-info\")\r\n    }\r\n\r\n    actionButtonMouseLeave = (a) => {\r\n        a.currentTarget.classList.remove(\"bg-info\")\r\n    }\r\n    //#endregion\r\n\r\n    //#region marker(icon) events\r\n    onMarkerClick = (a, b, e) => {\r\n        this.setState({\r\n            activeMarker: this.state.userMarkers[a.index],\r\n            markerEditorVisible: true\r\n        })\r\n    }\r\n\r\n    onOtherMarkerClick = (a, b, e) => {\r\n        // render an infowindow?\r\n    }\r\n\r\n    globalMarkerClicked = (a) => {\r\n        this.setState({\r\n            panToPos: this.state.userMarkers[a.currentTarget.dataset.index].position\r\n        })\r\n    }\r\n\r\n    globalOtherMarkerClicked = (a) => {\r\n        this.setState({\r\n            panToPos: this.state.otherMarkers[a.currentTarget.dataset.index].position\r\n        })\r\n    }\r\n\r\n    toolbarIconClicked = (e) => {\r\n        this.setState({\r\n            markerEditorVisible: false,\r\n            activeMarker: null,\r\n            placeMarker: true,\r\n            currentMarkerIconName: e.currentTarget.dataset.iconName,\r\n            currentMarkerSVG: getMarkerSVGByName(e.currentTarget.dataset.iconName),\r\n        })\r\n    }\r\n    //#endregion\r\n\r\n    onMapClicked = (a, b, e) => {\r\n        if (this.state.placeMarker) {\r\n            let newMarker = new QMarker({\r\n                index: this.state.userMarkers.length,\r\n                name: \"new marker\",\r\n                description: \"description\",\r\n                position: {\r\n                    lat: e.latLng.lat(),\r\n                    lng: e.latLng.lng()\r\n                },\r\n                iconName: this.state.currentMarkerIconName,\r\n                iconSVG: this.state.currentMarkerSVG\r\n            })\r\n            this.setState({\r\n                placeMarker: false,\r\n                userMarkers: [...this.state.userMarkers, newMarker]\r\n            })\r\n        } else {\r\n            this.setState({\r\n                activeMarker: null,\r\n                markerEditorVisible: false\r\n            })\r\n        }\r\n    }\r\n\r\n    saveMap = () => {\r\n        let data = JSON.stringify(this.state.userMarkers)\r\n        axios.post('http://localhost:3001', querystring.stringify({markers: data})).then((res) => {\r\n            window.location.href = \"http://localhost:3000/\" + res.data\r\n        })\r\n    }\r\n\r\n    // TODO get this logic working from within the MarkerEditor component\r\n    //#region markerEditorEvents\r\n    onMarkerNameChange = (e) => {\r\n        let marker = this.state.activeMarker\r\n        marker.name = e.currentTarget.value\r\n        this.setState({\r\n            activeMarker: marker\r\n        })\r\n    }\r\n\r\n    onMarkerDescriptionChange = (e) => {\r\n        let marker = this.state.activeMarker\r\n        marker.description = e.currentTarget.value\r\n        this.setState({\r\n            activeMarker: marker\r\n        })\r\n    }\r\n\r\n    onMarkerFillColorChange = (e) => {\r\n        let marker = this.state.activeMarker\r\n        marker.iconSVG.fillColor = e.currentTarget.value\r\n        marker.shouldRender = true\r\n        this.setState({\r\n            activeMarker: marker\r\n        })\r\n    }\r\n\r\n    onMarkerFillOpacityChange = (e) => {\r\n        let marker = this.state.activeMarker\r\n        marker.iconSVG.fillOpacity = parseFloat( e.currentTarget.value )\r\n        let newUserMarkers = this.state.userMarkers\r\n        marker.shouldRender = true\r\n        this.setState({\r\n            userMarkers: newUserMarkers,\r\n            activeMarker: newUserMarkers[marker.index]\r\n        })\r\n    }\r\n\r\n    onMarkerStrokeColorChange = (e) => {\r\n        let marker = this.state.activeMarker\r\n        marker.iconSVG.strokeColor = e.currentTarget.value\r\n        marker.shouldRender = true\r\n        this.setState({\r\n            activeMarker: marker\r\n        })\r\n    }\r\n\r\n    onMarkerStrokeWeightChange = (e) => {\r\n        let marker = this.state.activeMarker\r\n        marker.iconSVG.strokeWeight = parseInt( e.currentTarget.value )\r\n        marker.shouldRender = true\r\n        this.setState({\r\n            activeMarker: marker\r\n        })\r\n    }\r\n    //#endregion\r\n    \r\n    render() {\r\n        console.log('render')\r\n        let userMarkers = this.state.userMarkers.map((marker, index) => {\r\n            let thing = <Marker\r\n                key={index}\r\n                index={index}\r\n                name={marker.name}\r\n                position={marker.position}\r\n                icon={marker.iconSVG}\r\n                animation={marker.shouldRender ? null : window.google.maps.Animation.DROP}\r\n                onClick={this.onMarkerClick}\r\n                draggable={true}\r\n                shouldRender={marker.shouldRender}\r\n            />\r\n            marker.shouldRender = false\r\n            return thing\r\n        })\r\n\r\n        let otherMarkers = this.state.otherMarkers.map((marker, index) => {\r\n            let thing = <Marker\r\n                key={index}\r\n                index={index}\r\n                name={marker.name}\r\n                position={marker.position}\r\n                icon={marker.iconSVG}\r\n                onClick={this.onOtherMarkerClick}\r\n            />\r\n            marker.shouldRender = false\r\n            return thing\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <Map\r\n                    style={{transition: \"0.5s\", marginBottom: 46, marginLeft: this.state.leftSidebarVisible ? 300 : 0, marginRight: this.state.mapToolbarVisible ? 150 : 0}}\r\n                    styles={this.state.mapStyle}\r\n                    onClick={this.onMapClicked}\r\n                    google={this.props.google}\r\n                    zoom={10}\r\n                    center={this.state.panToPos ? this.state.panToPos : null}\r\n                    initialCenter={{\r\n                        lat: 33.83008972168741,\r\n                        lng: -84.35267661111448\r\n                    }}>\r\n\r\n                    {userMarkers}\r\n                    {otherMarkers}\r\n                    {this.iw}\r\n                </Map>\r\n\r\n                <section name=\"actionBar\" className=\"d-block\">\r\n                    <div className=\"container-fluid p-0 fixed-bottom bg-dark\" style={{height: \"46px\"}}>\r\n                        <div className=\"d-flex justify-content-around text-center\">\r\n                            <div style={{cursor: \"pointer\"}} onClick={this.toggleLeftSidebar} onMouseEnter={this.actionButtonMouseEnter} onMouseLeave={this.actionButtonMouseLeave} className=\"col\"><i className=\"fas fa-lg fa-list p-3 text-white\"></i></div>\r\n                            <div style={{cursor: \"pointer\"}} onClick={this.toggleHelpWindow} onMouseEnter={this.actionButtonMouseEnter} onMouseLeave={this.actionButtonMouseLeave} className=\"col\"><i className=\"fas fa-lg fa-question p-3 text-white\"></i></div>\r\n                            <div style={{cursor: \"pointer\"}} onClick={this.toggleMapToolbar} onMouseEnter={this.actionButtonMouseEnter} onMouseLeave={this.actionButtonMouseLeave} className=\"col\"><i className=\"fas fa-lg fa-list fa-flip-horizontal p-3 text-white\"></i></div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <HelpWindow visible={this.state.helpWindowVisible} />\r\n\r\n                <Sidebar visible={this.state.leftSidebarVisible} side=\"left\" size={\"300px\"}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h4>Main Markers</h4>\r\n                            {this.state.userMarkers.map((a, b) =>{\r\n                                return <i onClick={this.globalMarkerClicked} key={a.index} data-index={a.index} className={\"fa fa-fw fa-2x fa-\" + a.iconName}></i>\r\n                            })}\r\n                            <hr></hr>\r\n                            <h4>Other Markers</h4>\r\n                            {this.state.otherMarkers.map((a, b) =>{\r\n                                return <i onClick={this.globalOtherMarkerClicked} key={a.index} data-index={a.index} className={\"fa fa-fw fa-2x fa-\" + a.iconName}></i>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </Sidebar>\r\n\r\n                <Sidebar className=\"p-4\" visible={this.state.markerEditorVisible} side=\"left\" size={\"300px\"}>\r\n                    <MarkerEditor\r\n                        activeMarker={this.state.activeMarker}\r\n                        onNameChange={this.onMarkerNameChange}\r\n                        onDescriptionChange={this.onMarkerDescriptionChange}\r\n                        onFillColorChange={this.onMarkerFillColorChange}\r\n                        onFillOpacityChange={this.onMarkerFillOpacityChange}\r\n                        onStrokeColorChange={this.onMarkerStrokeColorChange}\r\n                        onStrokeWeightChange={this.onMarkerStrokeWeightChange}\r\n                    />\r\n                </Sidebar>\r\n                \r\n                <Sidebar visible={this.state.mapToolbarVisible} side=\"right\">\r\n                    <MapToolbar onIconClick={this.toolbarIconClicked} onMapSave={this.saveMap} placeMarker={this.state.placeMarker} />\r\n                </Sidebar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyCYHkj8sSYIxtHm_guGKtkxqJTRTPF4luE',\r\n    LoadingContainer: () => <div></div>\r\n})(MapView)\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'\r\n\r\nimport MapView from \"./components/MapView\"\r\n\r\nconst checkAuth = () => {\r\n  return true\r\n}\r\n\r\nconst AuthRoute = ({ component, ...rest }) => (\r\n  <Route {...rest} render={props => (\r\n    checkAuth() ?\r\n    // <Component {...props} /> :\r\n    renderMergedProps(component, props, rest) :\r\n    <Redirect to={{pathname: '/login'}} />\r\n  )} />\r\n)\r\n\r\nconst renderMergedProps = (component, ...rest) => {\r\n  const finalProps = Object.assign({}, ...rest)\r\n  return (\r\n    React.createElement(component, finalProps)\r\n  )\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n          <section name=\"content\">\r\n            <div className=\"container-fluid p-0\">\r\n              <Switch>\r\n                <AuthRoute exact path=\"/\" component={MapView} />\r\n                <AuthRoute exact path=\"/:id\" component={MapView} />\r\n                <AuthRoute exact path=\"/:id/with/:others\" component={MapView} />\r\n              </Switch>\r\n            </div>\r\n          </section>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}